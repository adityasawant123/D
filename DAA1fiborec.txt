import java.util.Scanner;

public class daa {

    static int a = 0, b = 1, next = 0;

    static void printfibonacci(int n) {
        if (n > 0) {
            next = a + b;  // Calculate next Fibonacci number
            a = b;       // Update n1 to n2
            b = next;       // Update n2 to n3
            System.out.print(" " + next);  // Print the Fibonacci number
            printfibonacci(n - 1);   // Recursive call
        }
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of Fibonacci terms to print: ");
        int n = sc.nextInt();  // Taking input from the user

        if (n <= 0) {
            System.out.println("Please enter a positive integer.");
        } else if (n == 1) {
            System.out.print(a);  // If only one term is requested, print 0
        } else {
            System.out.print(a + " " + b);  // Print first two numbers (0 and 1)
            printfibonacci(n - 2);  // Call recursive function to print next numbers
        }

        sc.close(); // Close the Scanner to prevent resource leaks
    }
}*/




//Practical No:1 Fibonnachi search(Non-Recursive)
import java.util.Scanner;

public class FibonacciNonRecursive {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the position up to which Fibonacci series is to be printed (starting from 0th position): ");
        int n = scanner.nextInt();
        
        if (n < 0) {
            System.out.println("Please enter a non-negative integer.");
        } else if (n == 0) {
            System.out.println("Fibonacci Series up to position 0: 0");
        } else {
            int a = 0, b = 1;
            
            System.out.println("Fibonacci Series up to position " + n + ":");
            for (int i = 0; i <= n; i++) {
                System.out.print(a + " ");
                int next = a + b;
                a = b;
                b = next;
            }
        }
        
        scanner.close();
    }
}
