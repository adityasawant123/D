//Practical No:5 N-queens Problem
/*import java.util.Scanner;

public class daa {
    // Function to solve the N-Queens problem
    public static void nQueens(char board[][], int row) {
        // Base case: If all queens are placed, print the solution
        if (row == board.length) {
            printBoard(board);
            return;
        }
        // Column loop to try placing a queen in each column of the current row
        for (int j = 0; j < board.length; j++) {
            if (isSafe(board, row, j)) {  // Check if it's safe to place the queen
                board[row][j] = 'Q';       // Place the queen
                nQueens(board, row + 1);   // Recurse for the next row
                board[row][j] = '.';       // Backtrack and remove the queen
            }
        }
    }

    // Function to check if it's safe to place a queen at board[row][col]
    public static boolean isSafe(char board[][], int row, int col) {
        // Check the vertical column
        for (int i = 0; i < row; i++) {
            if (board[i][col] == 'Q') {
                return false;
            }
        }

        // Check the upper left diagonal
        for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
            if (board[i][j] == 'Q') {
                return false;
            }
        }

        // Check the upper right diagonal
        for (int i = row - 1, j = col + 1; i >= 0 && j < board.length; i--, j++) {
            if (board[i][j] == 'Q') {
                return false;
            }
        }

        return true;  // It's safe to place the queen
    }

    // Function to print the chess board
    public static void printBoard(char board[][]) {
        System.out.println("-------chess board-------");
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board.length; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Taking input for the size of the chessboard (n)
        System.out.print("Enter the size of the chessboard (n): ");
        int n = scanner.nextInt();

        // Initialize the board with empty cells
        char board[][] = new char[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                board[i][j] = '.';
            }
        }

        // Solve the N-Queens problem
        nQueens(board, 0);

        scanner.close();
    }
}*/
